From c49139939a83ea56f9aeb2de5e44b1c3eefcb456 Mon Sep 17 00:00:00 2001
From: Lars Toenning <dev@ltoenning.de>
Date: Mon, 20 May 2024 20:32:44 +0200
Subject: [PATCH] pr 825.

---
 include/behaviortree_cpp_v3/flatbuffers/base.h  | 17 +++++++++++------
 .../flatbuffers/stl_emulation.h                 |  2 +-
 2 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/include/behaviortree_cpp_v3/flatbuffers/base.h b/include/behaviortree_cpp_v3/flatbuffers/base.h
index 54a51aa..abe0b95 100644
--- a/include/behaviortree_cpp_v3/flatbuffers/base.h
+++ b/include/behaviortree_cpp_v3/flatbuffers/base.h
@@ -237,12 +237,17 @@ namespace flatbuffers {
       }
       #define FLATBUFFERS_HAS_STRING_VIEW 1
     // Check for absl::string_view
-    #elif __has_include("absl/strings/string_view.h")
-      #include "absl/strings/string_view.h"
-      namespace flatbuffers {
-        typedef absl::string_view string_view;
-      }
-      #define FLATBUFFERS_HAS_STRING_VIEW 1
+    #elif __has_include("absl/strings/string_view.h") && \
+          __has_include("absl/base/config.h") && \
+          (__cplusplus >= 201411)
+      #include "absl/base/config.h"
+      #if !defined(ABSL_USES_STD_STRING_VIEW)
+        #include "absl/strings/string_view.h"
+        namespace flatbuffers {
+          typedef absl::string_view string_view;
+        }
+        #define FLATBUFFERS_HAS_STRING_VIEW 1
+      #endif
     #endif
   #endif // __has_include
 #endif // !FLATBUFFERS_HAS_STRING_VIEW
diff --git a/include/behaviortree_cpp_v3/flatbuffers/stl_emulation.h b/include/behaviortree_cpp_v3/flatbuffers/stl_emulation.h
index 77e0f66..ec10dc1 100644
--- a/include/behaviortree_cpp_v3/flatbuffers/stl_emulation.h
+++ b/include/behaviortree_cpp_v3/flatbuffers/stl_emulation.h
@@ -625,7 +625,7 @@ class span FLATBUFFERS_FINAL_CLASS {
  private:
   // This is a naive implementation with 'count_' member even if (Extent != dynamic_extent).
   pointer const data_;
-  const size_type count_;
+  size_type count_;
 };
 
  #if !defined(FLATBUFFERS_SPAN_MINIMAL)
-- 
2.46.0

